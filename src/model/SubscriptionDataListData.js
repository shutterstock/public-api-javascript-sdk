/**
 * Shutterstock API Reference
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * OpenAPI spec version: 1.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient', '../model/SubscriptionAllotment', '../model/SubscriptionFormats', '../model/SubscriptionPricePerDownload'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SubscriptionAllotment'), require('./SubscriptionFormats'), require('./SubscriptionPricePerDownload'));
  } else {
    // Browser globals (root is window)
    if (!root.ShutterstockApiReference) {
      root.ShutterstockApiReference = {};
    }
    root.ShutterstockApiReference.SubscriptionDataListData = factory(root.ShutterstockApiReference.ApiClient, root.ShutterstockApiReference.SubscriptionAllotment, root.ShutterstockApiReference.SubscriptionFormats, root.ShutterstockApiReference.SubscriptionPricePerDownload);
  }
}(this, function(ApiClient, SubscriptionAllotment, SubscriptionFormats, SubscriptionPricePerDownload) {
  'use strict';




  /**
   * The SubscriptionDataListData model module.
   * @module model/SubscriptionDataListData
   * @version 1.2.0
   */

  /**
   * Constructs a new <code>SubscriptionDataListData</code>.
   * Subscription information
   * @alias module:model/SubscriptionDataListData
   * @class
   * @param id {String} Unique internal identifier for the subscription
   */
  var exports = function(id) {
    var _this = this;





    _this['id'] = id;




  };

  /**
   * Constructs a <code>SubscriptionDataListData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SubscriptionDataListData} obj Optional instance to populate.
   * @return {module:model/SubscriptionDataListData} The populated <code>SubscriptionDataListData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('allotment')) {
        obj['allotment'] = SubscriptionAllotment.constructFromObject(data['allotment']);
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('expiration_time')) {
        obj['expiration_time'] = ApiClient.convertToType(data['expiration_time'], 'Date');
      }
      if (data.hasOwnProperty('formats')) {
        obj['formats'] = ApiClient.convertToType(data['formats'], [SubscriptionFormats]);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('license')) {
        obj['license'] = ApiClient.convertToType(data['license'], 'String');
      }
      if (data.hasOwnProperty('asset_type')) {
        obj['asset_type'] = ApiClient.convertToType(data['asset_type'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
      }
      if (data.hasOwnProperty('price_per_download')) {
        obj['price_per_download'] = SubscriptionPricePerDownload.constructFromObject(data['price_per_download']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/SubscriptionAllotment} allotment
   */
  exports.prototype['allotment'] = undefined;
  /**
   * Description of the subscription
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Date the subscription ends
   * @member {Date} expiration_time
   */
  exports.prototype['expiration_time'] = undefined;
  /**
   * List of formats that are licensable for the subscription
   * @member {Array.<module:model/SubscriptionFormats>} formats
   */
  exports.prototype['formats'] = undefined;
  /**
   * Unique internal identifier for the subscription
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Internal identifier for the type of subscription
   * @member {String} license
   */
  exports.prototype['license'] = undefined;
  /**
   * Identifier for the type of assets associated with this subscription (images, videos, audio, editorial)
   * @member {String} asset_type
   */
  exports.prototype['asset_type'] = undefined;
  /**
   * Subscription metadata; different for each customer
   * @member {Object} metadata
   */
  exports.prototype['metadata'] = undefined;
  /**
   * @member {module:model/SubscriptionPricePerDownload} price_per_download
   */
  exports.prototype['price_per_download'] = undefined;



  return exports;
}));


