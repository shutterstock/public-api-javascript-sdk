/**
 * Shutterstock API Reference
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * OpenAPI spec version: 1.0.31
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShutterstockApiReference) {
      root.ShutterstockApiReference = {};
    }
    root.ShutterstockApiReference.UpdatedMedia = factory(root.ShutterstockApiReference.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The UpdatedMedia model module.
   * @module model/UpdatedMedia
   * @version 1.0.31
   */

  /**
   * Constructs a new <code>UpdatedMedia</code>.
   * Information about a piece of updated media
   * @alias module:model/UpdatedMedia
   * @class
   * @param id {String} ID of the media
   * @param updated_time {Date} Date that the media was updated
   * @param updates {Array.<String>} Types of updates that were made to the piece of media
   */
  var exports = function(id, updated_time, updates) {
    var _this = this;

    _this['id'] = id;
    _this['updated_time'] = updated_time;
    _this['updates'] = updates;
  };

  /**
   * Constructs a <code>UpdatedMedia</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdatedMedia} obj Optional instance to populate.
   * @return {module:model/UpdatedMedia} The populated <code>UpdatedMedia</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('updated_time')) {
        obj['updated_time'] = ApiClient.convertToType(data['updated_time'], 'Date');
      }
      if (data.hasOwnProperty('updates')) {
        obj['updates'] = ApiClient.convertToType(data['updates'], ['String']);
      }
    }
    return obj;
  }

  /**
   * ID of the media
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Date that the media was updated
   * @member {Date} updated_time
   */
  exports.prototype['updated_time'] = undefined;
  /**
   * Types of updates that were made to the piece of media
   * @member {Array.<String>} updates
   */
  exports.prototype['updates'] = undefined;



  return exports;
}));


