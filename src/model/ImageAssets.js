/**
 * Shutterstock API Reference
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * OpenAPI spec version: 1.1.42
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient', '../model/InlineResponse200AssetsHugeJpg', '../model/InlineResponse200AssetsHugeThumb'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineResponse200AssetsHugeJpg'), require('./InlineResponse200AssetsHugeThumb'));
  } else {
    // Browser globals (root is window)
    if (!root.ShutterstockApiReference) {
      root.ShutterstockApiReference = {};
    }
    root.ShutterstockApiReference.ImageAssets = factory(root.ShutterstockApiReference.ApiClient, root.ShutterstockApiReference.InlineResponse200AssetsHugeJpg, root.ShutterstockApiReference.InlineResponse200AssetsHugeThumb);
  }
}(this, function(ApiClient, InlineResponse200AssetsHugeJpg, InlineResponse200AssetsHugeThumb) {
  'use strict';




  /**
   * The ImageAssets model module.
   * @module model/ImageAssets
   * @version 1.1.42
   */

  /**
   * Constructs a new <code>ImageAssets</code>.
   * Information about the assets that are part of an image
   * @alias module:model/ImageAssets
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>ImageAssets</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ImageAssets} obj Optional instance to populate.
   * @return {module:model/ImageAssets} The populated <code>ImageAssets</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('huge_jpg')) {
        obj['huge_jpg'] = InlineResponse200AssetsHugeJpg.constructFromObject(data['huge_jpg']);
      }
      if (data.hasOwnProperty('huge_thumb')) {
        obj['huge_thumb'] = InlineResponse200AssetsHugeThumb.constructFromObject(data['huge_thumb']);
      }
      if (data.hasOwnProperty('large_thumb')) {
        obj['large_thumb'] = InlineResponse200AssetsHugeThumb.constructFromObject(data['large_thumb']);
      }
      if (data.hasOwnProperty('medium_jpg')) {
        obj['medium_jpg'] = InlineResponse200AssetsHugeJpg.constructFromObject(data['medium_jpg']);
      }
      if (data.hasOwnProperty('preview')) {
        obj['preview'] = InlineResponse200AssetsHugeThumb.constructFromObject(data['preview']);
      }
      if (data.hasOwnProperty('preview_1000')) {
        obj['preview_1000'] = InlineResponse200AssetsHugeThumb.constructFromObject(data['preview_1000']);
      }
      if (data.hasOwnProperty('preview_1500')) {
        obj['preview_1500'] = InlineResponse200AssetsHugeThumb.constructFromObject(data['preview_1500']);
      }
      if (data.hasOwnProperty('small_jpg')) {
        obj['small_jpg'] = InlineResponse200AssetsHugeJpg.constructFromObject(data['small_jpg']);
      }
      if (data.hasOwnProperty('small_thumb')) {
        obj['small_thumb'] = InlineResponse200AssetsHugeThumb.constructFromObject(data['small_thumb']);
      }
      if (data.hasOwnProperty('supersize_jpg')) {
        obj['supersize_jpg'] = InlineResponse200AssetsHugeJpg.constructFromObject(data['supersize_jpg']);
      }
      if (data.hasOwnProperty('vector_eps')) {
        obj['vector_eps'] = InlineResponse200AssetsHugeJpg.constructFromObject(data['vector_eps']);
      }
      if (data.hasOwnProperty('mosaic')) {
        obj['mosaic'] = InlineResponse200AssetsHugeThumb.constructFromObject(data['mosaic']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/InlineResponse200AssetsHugeJpg} huge_jpg
   */
  exports.prototype['huge_jpg'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeThumb} huge_thumb
   */
  exports.prototype['huge_thumb'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeThumb} large_thumb
   */
  exports.prototype['large_thumb'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeJpg} medium_jpg
   */
  exports.prototype['medium_jpg'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeThumb} preview
   */
  exports.prototype['preview'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeThumb} preview_1000
   */
  exports.prototype['preview_1000'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeThumb} preview_1500
   */
  exports.prototype['preview_1500'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeJpg} small_jpg
   */
  exports.prototype['small_jpg'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeThumb} small_thumb
   */
  exports.prototype['small_thumb'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeJpg} supersize_jpg
   */
  exports.prototype['supersize_jpg'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeJpg} vector_eps
   */
  exports.prototype['vector_eps'] = undefined;
  /**
   * @member {module:model/InlineResponse200AssetsHugeThumb} mosaic
   */
  exports.prototype['mosaic'] = undefined;



  return exports;
}));


